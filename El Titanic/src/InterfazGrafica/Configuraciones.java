/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazGrafica;

import Codigo.Tablero;
import java.awt.Image;
import java.util.Random;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JToggleButton;

/**
 *
 * @author Mario A
 */
public class Configuraciones extends javax.swing.JFrame {
    
    private Tablero tableroDelJuego;
    private JToggleButton[][] tableroGrafico;
    private JPanel marcoTableroGrafico;
    private JToggleButton botonPlantilla;

    /**
     * Creates new form Configuraciones
     */
    public Configuraciones() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Btn_Aplicar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Sld_Columnas = new javax.swing.JSlider();
        Sld_Filas = new javax.swing.JSlider();
        jLabel6 = new javax.swing.JLabel();
        Sld_CantidadBarcos = new javax.swing.JSlider();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        Btn_Aplicar.setText("Aplicar");
        Btn_Aplicar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Btn_AplicarActionPerformed(evt);
            }
        });
        getContentPane().add(Btn_Aplicar, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 400, 100, 30));

        jLabel1.setFont(new java.awt.Font("Verdana", 3, 22)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(63, 103, 147));
        jLabel1.setText("CONFIGURACIÓN");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 30, -1, -1));

        jLabel2.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(63, 103, 147));
        jLabel2.setText("Seleccione la cantidad de Columnas");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 180, -1, -1));

        jLabel4.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(63, 103, 147));
        jLabel4.setText("Seleccione la cantidad de Barcos que desea crear");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 280, -1, -1));

        Sld_Columnas.setFont(new java.awt.Font("Verdana", 3, 10)); // NOI18N
        Sld_Columnas.setForeground(new java.awt.Color(63, 103, 147));
        Sld_Columnas.setMajorTickSpacing(4);
        Sld_Columnas.setMaximum(5);
        Sld_Columnas.setMinimum(1);
        Sld_Columnas.setMinorTickSpacing(1);
        Sld_Columnas.setPaintLabels(true);
        Sld_Columnas.setPaintTicks(true);
        Sld_Columnas.setValue(3);
        Sld_Columnas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Sld_Columnas.setFocusable(false);
        Sld_Columnas.setOpaque(false);
        getContentPane().add(Sld_Columnas, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 220, -1));

        Sld_Filas.setFont(new java.awt.Font("Verdana", 3, 10)); // NOI18N
        Sld_Filas.setForeground(new java.awt.Color(63, 103, 147));
        Sld_Filas.setMajorTickSpacing(4);
        Sld_Filas.setMaximum(5);
        Sld_Filas.setMinimum(1);
        Sld_Filas.setMinorTickSpacing(1);
        Sld_Filas.setPaintLabels(true);
        Sld_Filas.setPaintTicks(true);
        Sld_Filas.setValue(3);
        Sld_Filas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Sld_Filas.setFocusable(false);
        Sld_Filas.setOpaque(false);
        getContentPane().add(Sld_Filas, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 130, 220, -1));

        jLabel6.setFont(new java.awt.Font("Verdana", 3, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(63, 103, 147));
        jLabel6.setText("Seleccione la cantidad de Filas");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 100, -1, -1));

        Sld_CantidadBarcos.setFont(new java.awt.Font("Verdana", 3, 10)); // NOI18N
        Sld_CantidadBarcos.setForeground(new java.awt.Color(63, 103, 147));
        Sld_CantidadBarcos.setMajorTickSpacing(4);
        Sld_CantidadBarcos.setMaximum(5);
        Sld_CantidadBarcos.setMinimum(1);
        Sld_CantidadBarcos.setMinorTickSpacing(1);
        Sld_CantidadBarcos.setPaintLabels(true);
        Sld_CantidadBarcos.setPaintTicks(true);
        Sld_CantidadBarcos.setValue(3);
        Sld_CantidadBarcos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        Sld_CantidadBarcos.setFocusable(false);
        Sld_CantidadBarcos.setOpaque(false);
        getContentPane().add(Sld_CantidadBarcos, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 320, 230, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagenes/FondoGris.jpg"))); // NOI18N
        jLabel5.setText("jLabel5");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 390, 450));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    /**
     * Metodo necesario para obtener los objetos de la clase AreaJuego que se van
     * a modificar en la configuracion del terreno de juego.
     * @param pTablero
     * @param pMatrizGrafica
     * @param pMarcoCasillas
     * @param pBotonMuestra
     */
    public void setDatosDeAreaJuego(Tablero pTablero, JToggleButton[][] pMatrizGrafica, JPanel pMarcoCasillas, JToggleButton pBotonMuestra){
        
        tableroDelJuego = pTablero;
        tableroGrafico = pMatrizGrafica;
        marcoTableroGrafico = pMarcoCasillas;
        botonPlantilla = pBotonMuestra;        
    }
    
    
    
    /**
     * Metodo que le permite al usuario crear una nueva configuracion para crear
     * una nueva partida con dicha informacion.
     *
     * @param evt
     */
    private void Btn_AplicarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Btn_AplicarActionPerformed

        // Variables que almacenan los datos optenidos de la configuracion en el 
        // momento de presionar el boton aplicar.
        int filasDe1Usuario = Sld_Filas.getValue();
        int columnasDelTablero = Sld_Columnas.getValue();
        int cantidadDeBarcos = Sld_CantidadBarcos.getValue();

        // No es posible crear la matriz, ya que la cantidad de barcos
        // es mayor a la cantidad de casillas disponibles.
        if ((filasDe1Usuario * columnasDelTablero) < cantidadDeBarcos) {
            JOptionPane.showMessageDialog(this, "La cantidad de barcos que desea"
                    + " agregar es mayor a la cantidad\n de espacios disponibles",
                    "Ups", JOptionPane.ERROR_MESSAGE);
        } else {
            //*******************************************************************************************************************
            JOptionPane.showMessageDialog(this, "filas: " + filasDe1Usuario + " columnas: " + columnasDelTablero + " barcos: " + cantidadDeBarcos);
            //*******************************************************************************************************************

            if (tableroDelJuego == null) {
                // No hay un juego actualmente. Se procede a crear la partida.
                generarMatriz(filasDe1Usuario * 2, columnasDelTablero, cantidadDeBarcos);
            } else {
                // Hay una partida en curso. Se le pregunta al usuario si dessea
                // crear una nueva partida o continuar con la actual.
                int opcion = JOptionPane.showConfirmDialog(this, "Actualmente "
                        + "existe una partidad en curso. ¿Desea sobreescribir la"
                        + " partida?", "Partida en curso",
                        JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

                if (opcion == JOptionPane.YES_OPTION) {
                    // El usuario desea sobreescribir la partida, por lo que se
                    // procede a generar una nueva matriz.
                    generarMatriz(filasDe1Usuario * 2, columnasDelTablero, cantidadDeBarcos);
                } else {
                    // Si no quiere crear una nueva partida, cierra la ventana 
                    // configuracion
                    this.dispose();
                }
            }
        }
    }//GEN-LAST:event_Btn_AplicarActionPerformed

    private void generarMatriz(int pFilas, int pColumnas, int pCantidadDeBarcos) {

        marcoTableroGrafico.removeAll();

        tableroDelJuego = new Tablero();
        // Se reinicializa la matriz de tipo Tablero, de la clase AreaJuego, con
        // las dimensiones dadas.
        tableroDelJuego.reInicializarTerreno(pFilas + 1, pColumnas);
        // Elimina la referencia de oMatrizBotones
        tableroGrafico = null;
        // Se crea la matriz de botones con las dimensiones dadas
        tableroGrafico = new JToggleButton[pFilas + 1][pColumnas];

        int anchoDelMarco = marcoTableroGrafico.getWidth();
        int altoDelMarco = marcoTableroGrafico.getHeight();
        int anchoBoton = anchoDelMarco / pColumnas;
        int altoBoton = altoDelMarco / (pFilas + 1);

        //  SE PROCEDE A CREAR LA INTERFAZ GRAFICA DEL TABLERO
        for (int i = 0; i <= pFilas; i++) {

            for (int j = 0; j < pColumnas; j++) {
                if (pFilas / 2 == i) {
                    break;
                }
                //JToggleButton button = new JToggleButton();
                JToggleButton button = new JToggleButton(botonPlantilla.getAction());
                button.setBounds((anchoBoton * j), (altoBoton * i), anchoBoton, altoBoton);
                ImageIcon imagen = new ImageIcon(getClass().getResource("/Imagenes/timon.png"));
                Image imgEscalada;
                if (anchoBoton <= altoBoton) {
                    imgEscalada = imagen.getImage().getScaledInstance(anchoBoton,
                            anchoBoton, Image.SCALE_SMOOTH);
                } else {
                    imgEscalada = imagen.getImage().getScaledInstance(altoBoton,
                            altoBoton, Image.SCALE_SMOOTH);
                }
                Icon iconoEscalado = new ImageIcon(imgEscalada);
                button.setIcon(iconoEscalado);
                marcoTableroGrafico.add(button);
                
                tableroGrafico[i][j] = button;
            }
        }
        
        // Creamos el Metodo que genera los Random
        Random randomColumnas = new Random();
        Random randomFilas = new Random();
        //El ciclo For para que cuente la cantidad de barcos para los Aliados al igual para los Enemigos
        for (int i = 0; i < pCantidadDeBarcos; i++) {
            int filas;
            int columnas;
            
            // El do/while es para crear los barcos Aliados.
            do {
                filas = randomFilas.nextInt(pFilas/2);
                columnas = randomColumnas.nextInt(pColumnas);

            } while (!tableroDelJuego.setBarco(filas, columnas));            

             // El do/while es para crear los barcos Enemigos.
            do {
                filas = randomFilas.nextInt(pFilas/2) + (pFilas/2 + 1);
                columnas = randomColumnas.nextInt(pColumnas);

            } while (!tableroDelJuego.setBarco(filas, columnas));
            
            System.out.println("Se creo el barco " + (i+1));

        }
        
        this.dispose();
        marcoTableroGrafico.repaint();
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Configuraciones.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Configuraciones().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Btn_Aplicar;
    private javax.swing.JSlider Sld_CantidadBarcos;
    private javax.swing.JSlider Sld_Columnas;
    private javax.swing.JSlider Sld_Filas;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
